Terminals which are not used

   KWD_STRING
   OPER_ALIAS
   ILLEGAL_TOK
   ERROR
   ILLEGAL_STR


State 110 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declList

    2 declList: decl
    3         | declList decl

    4 decl: varDecl
    5     | funDecl

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier ID SEMICLN

    8 localVarDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    9             | typeSpecifier ID SEMICLN

   10 typeSpecifier: KWD_INT
   11              | KWD_CHAR
   12              | KWD_VOID

   13 funDecl: typeSpecifier ID LPAREN formalDeclList RPAREN funBody
   14        | typeSpecifier ID LPAREN RPAREN funBody

   15 formalDeclList: formalDecl
   16               | formalDecl COMMA formalDeclList

   17 formalDecl: typeSpecifier ID
   18           | typeSpecifier ID LSQ_BRKT RSQ_BRKT

   19 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT

   20 localDeclList: /* empty */
   21              | localVarDecl localDeclList

   22 statementList: /* empty */
   23              | statement statementList

   24 statement: compoundStmt
   25          | assignStmt
   26          | condStmt
   27          | loopStmt
   28          | returnStmt

   29 compoundStmt: LCRLY_BRKT statementList RCRLY_BRKT

   30 assignStmt: var OPER_ASGN expression SEMICLN
   31           | expression SEMICLN

   32 condStmt: KWD_IF LPAREN expression RPAREN statement
   33         | KWD_IF LPAREN expression RPAREN statement KWD_ELSE statement

   34 loopStmt: KWD_WHILE LPAREN expression RPAREN statement

   35 returnStmt: KWD_RETURN SEMICLN
   36           | KWD_RETURN expression SEMICLN

   37 var: ID
   38    | ID LSQ_BRKT addExpr RSQ_BRKT

   39 expression: addExpr
   40           | expression relop addExpr

   41 relop: OPER_LTE
   42      | OPER_LT
   43      | OPER_GT
   44      | OPER_GTE
   45      | OPER_EQ
   46      | OPER_NEQ

   47 addExpr: term
   48        | addExpr addop term

   49 addop: OPER_ADD
   50      | OPER_SUB

   51 term: factor
   52     | term mulop factor

   53 mulop: OPER_MUL
   54      | OPER_DIV

   55 factor: LPAREN expression RPAREN
   56       | var
   57       | funcCallExpr
   58       | INTCONST
   59       | CHARCONST
   60       | STRCONST

   61 funcCallExpr: ID LPAREN argList RPAREN
   62             | ID LPAREN RPAREN

   63 argList: expression
   64        | argList COMMA expression


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 7 8 9 13 14 17 18 37 38 61 62
INTCONST (259) 6 8 58
CHARCONST (260) 59
STRCONST (261) 60
KWD_IF (262) 32 33
KWD_ELSE (263) 33
KWD_WHILE (264) 34
KWD_INT (265) 10
KWD_STRING (266)
KWD_CHAR (267) 11
KWD_RETURN (268) 35 36
KWD_VOID (269) 12
OPER_ADD (270) 49
OPER_SUB (271) 50
OPER_MUL (272) 53
OPER_DIV (273) 54
OPER_LT (274) 42
OPER_GT (275) 43
OPER_GTE (276) 44
OPER_LTE (277) 41
OPER_EQ (278) 45
OPER_NEQ (279) 46
OPER_ASGN (280) 30
LSQ_BRKT (281) 6 8 18 38
RSQ_BRKT (282) 6 8 18 38
LCRLY_BRKT (283) 19 29
RCRLY_BRKT (284) 19 29
LPAREN (285) 13 14 32 33 34 55 61 62
RPAREN (286) 13 14 32 33 34 55 61 62
COMMA (287) 16 64
SEMICLN (288) 6 7 8 9 30 31 35 36
OPER_ALIAS (289)
ILLEGAL_TOK (290)
ERROR (291)
ILLEGAL_STR (292)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
declList (40)
    on left: 2 3, on right: 1 3
decl (41)
    on left: 4 5, on right: 2 3
varDecl (42)
    on left: 6 7, on right: 4
localVarDecl (43)
    on left: 8 9, on right: 21
typeSpecifier (44)
    on left: 10 11 12, on right: 6 7 8 9 13 14 17 18
funDecl (45)
    on left: 13 14, on right: 5
formalDeclList (46)
    on left: 15 16, on right: 13 16
formalDecl (47)
    on left: 17 18, on right: 15 16
funBody (48)
    on left: 19, on right: 13 14
localDeclList (49)
    on left: 20 21, on right: 19 21
statementList (50)
    on left: 22 23, on right: 19 23 29
statement (51)
    on left: 24 25 26 27 28, on right: 23 32 33 34
compoundStmt (52)
    on left: 29, on right: 24
assignStmt (53)
    on left: 30 31, on right: 25
condStmt (54)
    on left: 32 33, on right: 26
loopStmt (55)
    on left: 34, on right: 27
returnStmt (56)
    on left: 35 36, on right: 28
var (57)
    on left: 37 38, on right: 30 56
expression (58)
    on left: 39 40, on right: 30 31 32 33 34 36 40 55 63 64
relop (59)
    on left: 41 42 43 44 45 46, on right: 40
addExpr (60)
    on left: 47 48, on right: 38 39 40 48
addop (61)
    on left: 49 50, on right: 48
term (62)
    on left: 51 52, on right: 47 48 52
mulop (63)
    on left: 53 54, on right: 52
factor (64)
    on left: 55 56 57 58 59 60, on right: 51 52
funcCallExpr (65)
    on left: 61 62, on right: 57
argList (66)
    on left: 63 64, on right: 61 64


state 0

    0 $accept: . program $end

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    program        go to state 4
    declList       go to state 5
    decl           go to state 6
    varDecl        go to state 7
    typeSpecifier  go to state 8
    funDecl        go to state 9


state 1

   10 typeSpecifier: KWD_INT .

    $default  reduce using rule 10 (typeSpecifier)


state 2

   11 typeSpecifier: KWD_CHAR .

    $default  reduce using rule 11 (typeSpecifier)


state 3

   12 typeSpecifier: KWD_VOID .

    $default  reduce using rule 12 (typeSpecifier)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 10


state 5

    1 program: declList .
    3 declList: declList . decl

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    $default  reduce using rule 1 (program)

    decl           go to state 11
    varDecl        go to state 7
    typeSpecifier  go to state 8
    funDecl        go to state 9


state 6

    2 declList: decl .

    $default  reduce using rule 2 (declList)


state 7

    4 decl: varDecl .

    $default  reduce using rule 4 (decl)


state 8

    6 varDecl: typeSpecifier . ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier . ID SEMICLN
   13 funDecl: typeSpecifier . ID LPAREN formalDeclList RPAREN funBody
   14        | typeSpecifier . ID LPAREN RPAREN funBody

    ID  shift, and go to state 12


state 9

    5 decl: funDecl .

    $default  reduce using rule 5 (decl)


state 10

    0 $accept: program $end .

    $default  accept


state 11

    3 declList: declList decl .

    $default  reduce using rule 3 (declList)


state 12

    6 varDecl: typeSpecifier ID . LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier ID . SEMICLN
   13 funDecl: typeSpecifier ID . LPAREN formalDeclList RPAREN funBody
   14        | typeSpecifier ID . LPAREN RPAREN funBody

    LSQ_BRKT  shift, and go to state 13
    LPAREN    shift, and go to state 14
    SEMICLN   shift, and go to state 15


state 13

    6 varDecl: typeSpecifier ID LSQ_BRKT . INTCONST RSQ_BRKT SEMICLN

    INTCONST  shift, and go to state 16


state 14

   13 funDecl: typeSpecifier ID LPAREN . formalDeclList RPAREN funBody
   14        | typeSpecifier ID LPAREN . RPAREN funBody

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3
    RPAREN    shift, and go to state 17

    typeSpecifier   go to state 18
    formalDeclList  go to state 19
    formalDecl      go to state 20


state 15

    7 varDecl: typeSpecifier ID SEMICLN .

    $default  reduce using rule 7 (varDecl)


state 16

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST . RSQ_BRKT SEMICLN

    RSQ_BRKT  shift, and go to state 21


state 17

   14 funDecl: typeSpecifier ID LPAREN RPAREN . funBody

    LCRLY_BRKT  shift, and go to state 22

    funBody  go to state 23


state 18

   17 formalDecl: typeSpecifier . ID
   18           | typeSpecifier . ID LSQ_BRKT RSQ_BRKT

    ID  shift, and go to state 24


state 19

   13 funDecl: typeSpecifier ID LPAREN formalDeclList . RPAREN funBody

    RPAREN  shift, and go to state 25


state 20

   15 formalDeclList: formalDecl .
   16               | formalDecl . COMMA formalDeclList

    COMMA  shift, and go to state 26

    $default  reduce using rule 15 (formalDeclList)


state 21

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT . SEMICLN

    SEMICLN  shift, and go to state 27


state 22

   19 funBody: LCRLY_BRKT . localDeclList statementList RCRLY_BRKT

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    $default  reduce using rule 20 (localDeclList)

    localVarDecl   go to state 28
    typeSpecifier  go to state 29
    localDeclList  go to state 30


state 23

   14 funDecl: typeSpecifier ID LPAREN RPAREN funBody .

    $default  reduce using rule 14 (funDecl)


state 24

   17 formalDecl: typeSpecifier ID .
   18           | typeSpecifier ID . LSQ_BRKT RSQ_BRKT

    LSQ_BRKT  shift, and go to state 31

    $default  reduce using rule 17 (formalDecl)


state 25

   13 funDecl: typeSpecifier ID LPAREN formalDeclList RPAREN . funBody

    LCRLY_BRKT  shift, and go to state 22

    funBody  go to state 32


state 26

   16 formalDeclList: formalDecl COMMA . formalDeclList

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    typeSpecifier   go to state 18
    formalDeclList  go to state 33
    formalDecl      go to state 20


state 27

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN .

    $default  reduce using rule 6 (varDecl)


state 28

   21 localDeclList: localVarDecl . localDeclList

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    $default  reduce using rule 20 (localDeclList)

    localVarDecl   go to state 28
    typeSpecifier  go to state 29
    localDeclList  go to state 34


state 29

    8 localVarDecl: typeSpecifier . ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    9             | typeSpecifier . ID SEMICLN

    ID  shift, and go to state 35


state 30

   19 funBody: LCRLY_BRKT localDeclList . statementList RCRLY_BRKT

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_IF      shift, and go to state 40
    KWD_WHILE   shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    $default  reduce using rule 22 (statementList)

    statementList  go to state 45
    statement      go to state 46
    compoundStmt   go to state 47
    assignStmt     go to state 48
    condStmt       go to state 49
    loopStmt       go to state 50
    returnStmt     go to state 51
    var            go to state 52
    expression     go to state 53
    addExpr        go to state 54
    term           go to state 55
    factor         go to state 56
    funcCallExpr   go to state 57


state 31

   18 formalDecl: typeSpecifier ID LSQ_BRKT . RSQ_BRKT

    RSQ_BRKT  shift, and go to state 58


state 32

   13 funDecl: typeSpecifier ID LPAREN formalDeclList RPAREN funBody .

    $default  reduce using rule 13 (funDecl)


state 33

   16 formalDeclList: formalDecl COMMA formalDeclList .

    $default  reduce using rule 16 (formalDeclList)


state 34

   21 localDeclList: localVarDecl localDeclList .

    $default  reduce using rule 21 (localDeclList)


state 35

    8 localVarDecl: typeSpecifier ID . LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    9             | typeSpecifier ID . SEMICLN

    LSQ_BRKT  shift, and go to state 59
    SEMICLN   shift, and go to state 60


state 36

   37 var: ID .
   38    | ID . LSQ_BRKT addExpr RSQ_BRKT
   61 funcCallExpr: ID . LPAREN argList RPAREN
   62             | ID . LPAREN RPAREN

    LSQ_BRKT  shift, and go to state 61
    LPAREN    shift, and go to state 62

    $default  reduce using rule 37 (var)


state 37

   58 factor: INTCONST .

    $default  reduce using rule 58 (factor)


state 38

   59 factor: CHARCONST .

    $default  reduce using rule 59 (factor)


state 39

   60 factor: STRCONST .

    $default  reduce using rule 60 (factor)


state 40

   32 condStmt: KWD_IF . LPAREN expression RPAREN statement
   33         | KWD_IF . LPAREN expression RPAREN statement KWD_ELSE statement

    LPAREN  shift, and go to state 63


state 41

   34 loopStmt: KWD_WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 64


state 42

   35 returnStmt: KWD_RETURN . SEMICLN
   36           | KWD_RETURN . expression SEMICLN

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44
    SEMICLN    shift, and go to state 65

    var           go to state 66
    expression    go to state 67
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 43

   29 compoundStmt: LCRLY_BRKT . statementList RCRLY_BRKT

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_IF      shift, and go to state 40
    KWD_WHILE   shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    $default  reduce using rule 22 (statementList)

    statementList  go to state 68
    statement      go to state 46
    compoundStmt   go to state 47
    assignStmt     go to state 48
    condStmt       go to state 49
    loopStmt       go to state 50
    returnStmt     go to state 51
    var            go to state 52
    expression     go to state 53
    addExpr        go to state 54
    term           go to state 55
    factor         go to state 56
    funcCallExpr   go to state 57


state 44

   55 factor: LPAREN . expression RPAREN

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 66
    expression    go to state 69
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 45

   19 funBody: LCRLY_BRKT localDeclList statementList . RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 70


state 46

   23 statementList: statement . statementList

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_IF      shift, and go to state 40
    KWD_WHILE   shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    $default  reduce using rule 22 (statementList)

    statementList  go to state 71
    statement      go to state 46
    compoundStmt   go to state 47
    assignStmt     go to state 48
    condStmt       go to state 49
    loopStmt       go to state 50
    returnStmt     go to state 51
    var            go to state 52
    expression     go to state 53
    addExpr        go to state 54
    term           go to state 55
    factor         go to state 56
    funcCallExpr   go to state 57


state 47

   24 statement: compoundStmt .

    $default  reduce using rule 24 (statement)


state 48

   25 statement: assignStmt .

    $default  reduce using rule 25 (statement)


state 49

   26 statement: condStmt .

    $default  reduce using rule 26 (statement)


state 50

   27 statement: loopStmt .

    $default  reduce using rule 27 (statement)


state 51

   28 statement: returnStmt .

    $default  reduce using rule 28 (statement)


state 52

   30 assignStmt: var . OPER_ASGN expression SEMICLN
   56 factor: var .

    OPER_ASGN  shift, and go to state 72

    $default  reduce using rule 56 (factor)


state 53

   31 assignStmt: expression . SEMICLN
   40 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_GTE  shift, and go to state 75
    OPER_LTE  shift, and go to state 76
    OPER_EQ   shift, and go to state 77
    OPER_NEQ  shift, and go to state 78
    SEMICLN   shift, and go to state 79

    relop  go to state 80


state 54

   39 expression: addExpr .
   48 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 81
    OPER_SUB  shift, and go to state 82

    $default  reduce using rule 39 (expression)

    addop  go to state 83


state 55

   47 addExpr: term .
   52 term: term . mulop factor

    OPER_MUL  shift, and go to state 84
    OPER_DIV  shift, and go to state 85

    $default  reduce using rule 47 (addExpr)

    mulop  go to state 86


state 56

   51 term: factor .

    $default  reduce using rule 51 (term)


state 57

   57 factor: funcCallExpr .

    $default  reduce using rule 57 (factor)


state 58

   18 formalDecl: typeSpecifier ID LSQ_BRKT RSQ_BRKT .

    $default  reduce using rule 18 (formalDecl)


state 59

    8 localVarDecl: typeSpecifier ID LSQ_BRKT . INTCONST RSQ_BRKT SEMICLN

    INTCONST  shift, and go to state 87


state 60

    9 localVarDecl: typeSpecifier ID SEMICLN .

    $default  reduce using rule 9 (localVarDecl)


state 61

   38 var: ID LSQ_BRKT . addExpr RSQ_BRKT

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 66
    addExpr       go to state 88
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 62

   61 funcCallExpr: ID LPAREN . argList RPAREN
   62             | ID LPAREN . RPAREN

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44
    RPAREN     shift, and go to state 89

    var           go to state 66
    expression    go to state 90
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57
    argList       go to state 91


state 63

   32 condStmt: KWD_IF LPAREN . expression RPAREN statement
   33         | KWD_IF LPAREN . expression RPAREN statement KWD_ELSE statement

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 66
    expression    go to state 92
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 64

   34 loopStmt: KWD_WHILE LPAREN . expression RPAREN statement

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 66
    expression    go to state 93
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 65

   35 returnStmt: KWD_RETURN SEMICLN .

    $default  reduce using rule 35 (returnStmt)


state 66

   56 factor: var .

    $default  reduce using rule 56 (factor)


state 67

   36 returnStmt: KWD_RETURN expression . SEMICLN
   40 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_GTE  shift, and go to state 75
    OPER_LTE  shift, and go to state 76
    OPER_EQ   shift, and go to state 77
    OPER_NEQ  shift, and go to state 78
    SEMICLN   shift, and go to state 94

    relop  go to state 80


state 68

   29 compoundStmt: LCRLY_BRKT statementList . RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 95


state 69

   40 expression: expression . relop addExpr
   55 factor: LPAREN expression . RPAREN

    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_GTE  shift, and go to state 75
    OPER_LTE  shift, and go to state 76
    OPER_EQ   shift, and go to state 77
    OPER_NEQ  shift, and go to state 78
    RPAREN    shift, and go to state 96

    relop  go to state 80


state 70

   19 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT .

    $default  reduce using rule 19 (funBody)


state 71

   23 statementList: statement statementList .

    $default  reduce using rule 23 (statementList)


state 72

   30 assignStmt: var OPER_ASGN . expression SEMICLN

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 66
    expression    go to state 97
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 73

   42 relop: OPER_LT .

    $default  reduce using rule 42 (relop)


state 74

   43 relop: OPER_GT .

    $default  reduce using rule 43 (relop)


state 75

   44 relop: OPER_GTE .

    $default  reduce using rule 44 (relop)


state 76

   41 relop: OPER_LTE .

    $default  reduce using rule 41 (relop)


state 77

   45 relop: OPER_EQ .

    $default  reduce using rule 45 (relop)


state 78

   46 relop: OPER_NEQ .

    $default  reduce using rule 46 (relop)


state 79

   31 assignStmt: expression SEMICLN .

    $default  reduce using rule 31 (assignStmt)


state 80

   40 expression: expression relop . addExpr

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 66
    addExpr       go to state 98
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 81

   49 addop: OPER_ADD .

    $default  reduce using rule 49 (addop)


state 82

   50 addop: OPER_SUB .

    $default  reduce using rule 50 (addop)


state 83

   48 addExpr: addExpr addop . term

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 66
    term          go to state 99
    factor        go to state 56
    funcCallExpr  go to state 57


state 84

   53 mulop: OPER_MUL .

    $default  reduce using rule 53 (mulop)


state 85

   54 mulop: OPER_DIV .

    $default  reduce using rule 54 (mulop)


state 86

   52 term: term mulop . factor

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 66
    factor        go to state 100
    funcCallExpr  go to state 57


state 87

    8 localVarDecl: typeSpecifier ID LSQ_BRKT INTCONST . RSQ_BRKT SEMICLN

    RSQ_BRKT  shift, and go to state 101


state 88

   38 var: ID LSQ_BRKT addExpr . RSQ_BRKT
   48 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 81
    OPER_SUB  shift, and go to state 82
    RSQ_BRKT  shift, and go to state 102

    addop  go to state 83


state 89

   62 funcCallExpr: ID LPAREN RPAREN .

    $default  reduce using rule 62 (funcCallExpr)


state 90

   40 expression: expression . relop addExpr
   63 argList: expression .

    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_GTE  shift, and go to state 75
    OPER_LTE  shift, and go to state 76
    OPER_EQ   shift, and go to state 77
    OPER_NEQ  shift, and go to state 78

    $default  reduce using rule 63 (argList)

    relop  go to state 80


state 91

   61 funcCallExpr: ID LPAREN argList . RPAREN
   64 argList: argList . COMMA expression

    RPAREN  shift, and go to state 103
    COMMA   shift, and go to state 104


state 92

   32 condStmt: KWD_IF LPAREN expression . RPAREN statement
   33         | KWD_IF LPAREN expression . RPAREN statement KWD_ELSE statement
   40 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_GTE  shift, and go to state 75
    OPER_LTE  shift, and go to state 76
    OPER_EQ   shift, and go to state 77
    OPER_NEQ  shift, and go to state 78
    RPAREN    shift, and go to state 105

    relop  go to state 80


state 93

   34 loopStmt: KWD_WHILE LPAREN expression . RPAREN statement
   40 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_GTE  shift, and go to state 75
    OPER_LTE  shift, and go to state 76
    OPER_EQ   shift, and go to state 77
    OPER_NEQ  shift, and go to state 78
    RPAREN    shift, and go to state 106

    relop  go to state 80


state 94

   36 returnStmt: KWD_RETURN expression SEMICLN .

    $default  reduce using rule 36 (returnStmt)


state 95

   29 compoundStmt: LCRLY_BRKT statementList RCRLY_BRKT .

    $default  reduce using rule 29 (compoundStmt)


state 96

   55 factor: LPAREN expression RPAREN .

    $default  reduce using rule 55 (factor)


state 97

   30 assignStmt: var OPER_ASGN expression . SEMICLN
   40 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_GTE  shift, and go to state 75
    OPER_LTE  shift, and go to state 76
    OPER_EQ   shift, and go to state 77
    OPER_NEQ  shift, and go to state 78
    SEMICLN   shift, and go to state 107

    relop  go to state 80


state 98

   40 expression: expression relop addExpr .
   48 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 81
    OPER_SUB  shift, and go to state 82

    $default  reduce using rule 40 (expression)

    addop  go to state 83


state 99

   48 addExpr: addExpr addop term .
   52 term: term . mulop factor

    OPER_MUL  shift, and go to state 84
    OPER_DIV  shift, and go to state 85

    $default  reduce using rule 48 (addExpr)

    mulop  go to state 86


state 100

   52 term: term mulop factor .

    $default  reduce using rule 52 (term)


state 101

    8 localVarDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT . SEMICLN

    SEMICLN  shift, and go to state 108


state 102

   38 var: ID LSQ_BRKT addExpr RSQ_BRKT .

    $default  reduce using rule 38 (var)


state 103

   61 funcCallExpr: ID LPAREN argList RPAREN .

    $default  reduce using rule 61 (funcCallExpr)


state 104

   64 argList: argList COMMA . expression

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 66
    expression    go to state 109
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 105

   32 condStmt: KWD_IF LPAREN expression RPAREN . statement
   33         | KWD_IF LPAREN expression RPAREN . statement KWD_ELSE statement

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_IF      shift, and go to state 40
    KWD_WHILE   shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    statement     go to state 110
    compoundStmt  go to state 47
    assignStmt    go to state 48
    condStmt      go to state 49
    loopStmt      go to state 50
    returnStmt    go to state 51
    var           go to state 52
    expression    go to state 53
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 106

   34 loopStmt: KWD_WHILE LPAREN expression RPAREN . statement

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_IF      shift, and go to state 40
    KWD_WHILE   shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    statement     go to state 111
    compoundStmt  go to state 47
    assignStmt    go to state 48
    condStmt      go to state 49
    loopStmt      go to state 50
    returnStmt    go to state 51
    var           go to state 52
    expression    go to state 53
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 107

   30 assignStmt: var OPER_ASGN expression SEMICLN .

    $default  reduce using rule 30 (assignStmt)


state 108

    8 localVarDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN .

    $default  reduce using rule 8 (localVarDecl)


state 109

   40 expression: expression . relop addExpr
   64 argList: argList COMMA expression .

    OPER_LT   shift, and go to state 73
    OPER_GT   shift, and go to state 74
    OPER_GTE  shift, and go to state 75
    OPER_LTE  shift, and go to state 76
    OPER_EQ   shift, and go to state 77
    OPER_NEQ  shift, and go to state 78

    $default  reduce using rule 64 (argList)

    relop  go to state 80


state 110

   32 condStmt: KWD_IF LPAREN expression RPAREN statement .
   33         | KWD_IF LPAREN expression RPAREN statement . KWD_ELSE statement

    KWD_ELSE  shift, and go to state 112

    KWD_ELSE  [reduce using rule 32 (condStmt)]
    $default  reduce using rule 32 (condStmt)


state 111

   34 loopStmt: KWD_WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 34 (loopStmt)


state 112

   33 condStmt: KWD_IF LPAREN expression RPAREN statement KWD_ELSE . statement

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_IF      shift, and go to state 40
    KWD_WHILE   shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    statement     go to state 113
    compoundStmt  go to state 47
    assignStmt    go to state 48
    condStmt      go to state 49
    loopStmt      go to state 50
    returnStmt    go to state 51
    var           go to state 52
    expression    go to state 53
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 113

   33 condStmt: KWD_IF LPAREN expression RPAREN statement KWD_ELSE statement .

    $default  reduce using rule 33 (condStmt)
